server {
    listen 80;
    server_name 0.0.0.0;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name  0.0.0.0;
    ssl_certificate /etc/nginx/cert/server.crt;
    ssl_certificate_key /etc/nginx/cert/server.key;


    # To frontend
    location / {
        proxy_pass http://web:8080/;
        proxy_redirect http:// https://;
    }
    
    # To sockjs-node
    location /sockjs-node/ {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;

        proxy_pass http://web:8080;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";  
    }

    # To backend
    location /qai-testbed/api/ {
        proxy_pass http://app:5000;
    }

    # To backend (Wrapper)
    location /x-qai-testbed/api/ {
        ## TBD : Add Header
        ## proxy_set_header authorization: Bearer <Access Token>

        proxy_pass https://127.0.0.1/qai-testbed/api/;
    }

    # To integration provider 
    # only use dag deploy for alpha edition 
    # remove to rc edition
    location /qai-ip/api/ {
        proxy_pass http://ip:6000;
        proxy_next_upstream_timeout 900;
        proxy_next_upstream_tries 1;
        proxy_connect_timeout 900;
        proxy_send_timeout 900;
        proxy_read_timeout 900;
        send_timeout 900;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

